#!/usr/bin/env python3
#
##############################################################################
#
# MODULE:       Sorgenti del Brembo di Carona (DATA INPUT)
#
# AUTHOR(S):    E. Croce
#
# PURPOSE:      Script generated by wxGUI Graphical Modeler.
#
# DATE:         Thu Dec 14 12:18:04 2023
#
##############################################################################

#%module
#% description: Script generated by wxGUI Graphical Modeler.
#%end

import sys
import os
import atexit

from grass.script import parser, run_command

def cleanup():
    pass

def main(options, flags):
    run_command("v.in.ogr",
                input="D:\Archeologia\Carona\GIS\Area_Studio.shp",
                output="Area_SBC",
                min_area=0.0001,
                snap=-1)

    run_command("g.region",
                vector="Area_SBC",
                res="25")

    run_command("r.in.gdal",
                input="D:\Cartografia\EUROPA\ITALIA\LOMBARDIA\prov BERGAMO\DTM\DTM5_BG.img",
                output="DTM_BG",
                memory=300,
                offset=0,
                num_digits=0)

    run_command("r.in.gdal",
                input="D:\Cartografia\EUROPA\ITALIA\LOMBARDIA\prov SONDRIO\DTM\DTM5_SO.img",
                output="DTM_SO",
                memory=300,
                offset=0,
                num_digits=0)

    run_command("r.mask",
                maskcats="*",
                vector="Area_SBC",
                layer="1")

    run_command("r.patch",
                input="DTM_SO,DTM_BG",
                output="DTM_SBC")

    run_command("r.mask",
                flags='r',
                maskcats="*",
                vector="Area_SBC",
                layer="1")

    run_command("v.in.ogr",
                input="D:\Archeologia\Carona\GIS\Cartografia\Idrografia_Perenne_SBC.shp",
                output="Idrografia_Perenne_SBC",
                min_area=0.0001,
                snap=-1)

    run_command("v.to.rast",
                input="Idrografia_Perenne_SBC",
                layer="1",
                type="point,line,area",
                output="Rivers",
                use="val",
                value=1,
                memory=300)

    run_command("v.in.ogr",
                input="D:\Archeologia\Carona\GIS\Cartografia\Laghi_SBC.shp",
                output="Laghi_SBC",
                min_area=0.0001,
                snap=-1)

    run_command("v.to.rast",
                input="Laghi_SBC",
                layer="1",
                type="point,line,area",
                output="Lakes",
                use="val",
                value=1,
                memory=300)

    run_command("r.patch",
                input="Lakes,Rivers",
                output="Hydrography")

    run_command("v.in.ogr",
                input="D:\Archeologia\Carona\GIS\Cartografia\Litologia_SBC.shp",
                output="Litologia_SBC",
                min_area=0.0001,
                snap=-1)

    run_command("v.to.rast",
                input="Litologia_SBC",
                layer="1",
                type="point,line,area",
                output="Lithology",
                use="attr",
                attribute_column="SBC_COD",
                value=1,
                memory=300)

    run_command("v.in.ogr",
                input="D:\Archeologia\Carona\GIS\Cartografia\Permeabilita_SBC.shp",
                output="Permeabilita_SBC",
                min_area=0.0001,
                snap=-1)

    run_command("v.to.rast",
                input="Permeabilita_SBC",
                layer="1",
                type="point,line,area",
                output="Permeability",
                use="attr",
                attribute_column="SBC_COD",
                value=1,
                memory=300)

    run_command("v.in.ogr",
                input="D:\Archeologia\Carona\GIS\Cartografia\Valanghe_SBC.shp",
                output="Valanghe_SBC",
                min_area=0.0001,
                snap=-1)

    run_command("v.to.rast",
                input="Valanghe_SBC",
                layer="1",
                type="point,line,area",
                output="Avalanche",
                use="attr",
                attribute_column="SBC_COD",
                value=1,
                memory=300)

    run_command("r.slope.aspect",
                elevation="DTM_SBC",
                slope="Slope",
                format="degrees",
                precision="FCELL",
                pcurvature="Profile",
                zscale=1.0,
                min_slope=0.0)

    run_command("r.northerness.easterness",
                elevation="DTM_SBC")

    run_command("r.param.scale",
                input="DTM_SBC",
                output="MorFeat",
                slope_tolerance=1.0,
                curvature_tolerance=0.0001,
                size=3,
                method="feature",
                exponent=0.0,
                zscale=1.0)

    run_command("r.topidx",
                input="DTM_SBC",
                output="TWI")

    run_command("r.cost",
                input="Slope",
                output="River_cost",
                start_points="Idrografia_Perenne_SBC",
                max_cost=0,
                memory=300)

    run_command("r.cost",
                input="Slope",
                output="Lakes_cost",
                start_points="Laghi_SBC",
                max_cost=0,
                memory=300)

    run_command("v.in.ogr",
                input="D:\Archeologia\Carona\GIS\Siti\Alpeggi\Alpeggi_SBC.shp",
                output="Cottages_SBC",
                min_area=0.0001,
                snap=-1)

    run_command("v.to.rast",
                input="Cottages_SBC",
                layer="1",
                type="point,line,area",
                output="Cottages",
                use="val",
                value=1,
                memory=300)

    run_command("r.patch",
                input="Hydrography,Cottages",
                output="Hydro_Cottages")

    run_command("r.mask",
                flags='i',
                raster="Hydro_Cottages",
                maskcats="*",
                layer="1")

    run_command("r.random",
                input="Slope",
                npoints="90",
                vector="Random90")

    run_command("r.mask",
                flags='r',
                raster="Hydro_Cottages",
                maskcats="*",
                layer="1")

    return 0

if __name__ == "__main__":
    options, flags = parser()
    atexit.register(cleanup)
    sys.exit(main(options, flags))
